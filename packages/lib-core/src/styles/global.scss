@import "./default-theme.scss";

:root {
  // button
  --btn-bg-color-success: var(--success-color); // 按钮成功背景色
  --btn-bg-color-danger: var(--danger-color); // 按钮危险背景色
  --btn-bg-color-warning: var(--warning-color); // 按钮警告背景色
  --btn-bg-color-info: var(--info-color); // 按钮信息背景色
  --btn-bg-color-hover: darken(var(--primary-color), 10%); // 按钮悬停背景色
  --btn-bg-color-active: darken(var(--primary-color), 20%); // 按钮激活背景色

  // avatar
  --avatar-bg-color-info: var(--info-color); // 头像信息背景色
  --avatar-bg-color-success: var(--success-color); // 头像成功背景色
  --avatar-bg-color-danger: var(--danger-color); // 头像危险背景色
  --avatar-bg-color-warning: var(--warning-color); // 头像警告背景色

  // card
  --card-bg-color: var(--light-color); // 卡片背景色
  --card-bg-color-content: lighten(var(--card-bg-color), 10%); // 卡片背景渐变色
  --card-border-color: var(--border-color); // 卡片边框色
}

body {
  font-family: var(--font-family-base); // 基础字体
  font-size: var(--font-size-base); // 基础字体大小
  line-height: var(--line-height-base); // 基础行高
  color: var(--foreground-color); // 前景色
  background-color: var(--background-color); // 背景色
  margin: 0; // 清除默认边距
  transition:
    background-color 0.3s ease,
    // 背景色和文字颜色的过渡效果
    color 0.3s ease;
}

a {
  // 链接文字颜色
  color: var(--primary-color);

  &:hover {
    // 鼠标悬停时的链接文字颜色
    color: var(--secondary-color);
  }
}

h1,
h2,
h3,
h4,
h5,
h6 {
  // 标题字体
  font-family: var(--font-family-base);
  // 标题颜色
  color: var(--dark-color);
}

// 弹性化支持
.flex-center {

  // 应用弹性设置
  @each $property, $value in $flex-settings {
    #{$property}: #{$value};
  }
}

// 字体大小响应式支持
@media (max-width: map-get($breakpoints, sm)) {
  :root {
    --font-size-base: #{map-get($font-sizes, xs)}; // 小屏幕字体大小
  }
}

@media (min-width: map-get($breakpoints, sm)) and (max-width: map-get($breakpoints, md)) {
  :root {
    --font-size-base: #{map-get($font-sizes, sm)}; // 中小屏幕字体大小
  }
}

@media (min-width: map-get($breakpoints, md)) and (max-width: map-get($breakpoints, lg)) {
  :root {
    --font-size-base: #{map-get($font-sizes, md)}; // 中屏幕字体大小
  }
}

@media (min-width: map-get($breakpoints, lg)) and (max-width: map-get($breakpoints, xl)) {
  :root {
    --font-size-base: #{map-get($font-sizes, lg)}; // 大屏幕字体大小
  }
}

@media (min-width: map-get($breakpoints, xl)) {
  :root {
    --font-size-base: #{map-get($font-sizes, xl)}; // 超大屏幕字体大小
  }
}